local_planner_type: "teb_local_planner/TebLocalPlannerROS"
local_planner_name: "teb_local_planner"
min_tolerated_x_vel: 0.07 # If linear velocity is below this threshold costmap will be resetted as it assumed that the robot is stuck
max_time_between_resets: 1 # Max time in s between two costmap resets.
reset_costmap_automatically: False
reset_costmap_interval: 5  # Time between automatic costmap resets in seconds

teb_local_planner:
  # Robot
  max_vel_x: 0.3
  max_vel_x_backwards: 0.15
  max_vel_y: 0
  max_vel_theta: 2.7
  acc_lim_x: 10 # No bounds
  acc_lim_theta: 30 # No bounds
  min_turning_radius: 0.0 # diff-drive robot (can turn on place!)
  footprint_model:
    type: "circular"
    radius: 0.3

  # Obstacles
  min_obstacle_dist: 0.4
  inflation_dist: 0.3
  include_costmap_obstacles: False
  include_dynamic_obstacles: False

  # optimization
  yaw_goal_tolerance: 10 # Rotation at goal is irrelevant
  enable_homotopy_class_planning: True
  free_goal_vel: True # Velocity at goal is irrelevant
  no_inner_iterations: 4  # default 5 -> make calculation slightly faster
  no_outer_iterations: 3  # default 4 -> make calculation slightly faster
  max_global_plan_lookahead_dist: 3.5

  # Costmap converter plugin
  costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
  costmap_converter_spin_thread: True
  costmap_converter_rate: 20 # Twice the update rate of the all in one planner --> TEB should always have the new update for obstacles

local_costmap:
  update_frequency: 20.0
  publish_frequency: 1 # Publishing only relevant for visualization

  rolling_window: true
  width: 7 # 2x laser scan range
  height: 7
  resolution: 0.1
  transform_tolerance: 0.3 # allowed delay for the tf data

  obstacle_layer:
    obstacle_range: 3.5
    # Raytrace range has to be larger than laser range + 1 in order to correctly track dynamic obstacles with the filtered
    # scan messages.
    raytrace_range: 5
    robot_radius: 0.3
    inflation_radius: 0.3 # Use low inflation radius as goals might spawn close to obstacles
    map_type: costmap

    observation_sources: scan
    scan: { data_type: LaserScan, marking: true, topic: scan, clearing: true }

  inflation_layer:
    inflation_radius: 0.3

  plugins:
    - { name: inflation_layer,     type: "costmap_2d::InflationLayer" }
    - { name: obstacle_layer,      type: "costmap_2d::ObstacleLayer" }
